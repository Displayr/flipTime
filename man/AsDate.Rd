% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/asdate.R, R/asdatetime.R
\name{AsDate}
\alias{AsDate}
\alias{ParseDates}
\title{Parse Character Dates To POSIXct Objects}
\usage{
AsDate(x, us.format = NULL, exact = TRUE, on.parse.failure = "error")

ParseDates(x, us.format = NULL)
}
\arguments{
\item{x}{character; vector to be parsed}

\item{us.format}{logical; whether to use the US convention for dates; can be \code{NULL}
in which case both U.S. formats and international formats will be checked}

\item{exact}{see \code{\link[lubridate]{parse_date_time2}}}

\item{on.parse.failure}{Character string specifying how parse failures should be handled;
\code{"error"}, the default, results in an error being thrown with
\code{\link{stop}} in the event that \code{x} cannot be parsed;  specifying \code{"warn"} results
in a \code{\link{warning}} be thrown and a vector of \code{NA} values with the same length
as \code{x}; any other value results in a vector of NAs being returned silently.}
}
\value{
A vector of \code{\link{Date}} objects.
}
\description{
Parse dates assuming some common (unknown) formats
popular either in the U.S. or internationally
}
\details{
Time intervals or periods (start and end dates
representing a specific time span) are also supported. If periods
are detected in \code{x}, the starting date is parsed to class
\code{"Date"} and returned.  A wide-range of separators are
supported and days are optional.  The starting year also does not
need to be supplied, though for numeric months, the format must be
exactly \samp{"\%m/\%m \%y} or \samp{"\%m-\%m \%y"} (four-digit years
will also work).  See the examples.

\code{ParseDates} is deprecated and merely calls \code{AsDate}
}
\examples{
AsDate("1-2-2017", us.format = FALSE)
AsDate("1-2-2017", us.format = TRUE)
AsDate("10/16/2016-2/10/2017")
AsDate("jun/sep 10")
AsDate("10-02 2011")
AsDate("10/02/2011", us.format = TRUE)
AsDate("feb 2016-jan 2017")
AsDate("31-05-2010 16-08-2011")
AsDate("2010-February")
}
\seealso{
\code{\link{Date}}
}
