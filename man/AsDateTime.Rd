% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/asdatetime.R
\name{ParseDateTime}
\alias{ParseDateTime}
\alias{AsDateTime}
\title{Parse Character Date-Times to POSIXct Objects}
\usage{
ParseDateTime(x, us.format = TRUE, time.zone = "UTC")

AsDateTime(
  x,
  us.format = NULL,
  time.zone = "UTC",
  exact = FALSE,
  on.parse.failure = "error"
)
}
\arguments{
\item{x}{A character vector of dates with timestamps, which should all be in the same
format (excluding missing values). Can also be of class \code{Date} or \code{POSIXlt},
in which case it will be coerced
to \code{POSIXct} using \code{as.POSIXct}.}

\item{us.format}{logical; whether to use the US convention for dates; can be \code{NULL}
in which case both U.S. formats and international formats will be checked}

\item{time.zone}{An optional time zone (default \code{"UTC"}).}

\item{exact}{see \code{\link[lubridate]{parse_date_time2}}}

\item{on.parse.failure}{Character string specifying how parse failures should be handled;
\code{"error"}, the default, results in an error being thrown with
\code{\link{stop}} in the event that \code{x} cannot be parsed;  specifying \code{"warn"} results
in a \code{\link{warning}} be thrown and a vector of \code{NA} values with the same length
as \code{x}; any other value results in a vector of NAs being returned silently.}
}
\value{
A vector of POSIXct date-time objects, if all elements of \code{x} have
the same, valid format; otherwise, when \code{on.parse.failure} is \emph{not}
\code{"error"}, a vector of NA values with the same length as \code{x}.
}
\description{
Parses date-time character vectors to POSIXct
}
\details{
\code{ParseDateTime} is deprecated and merely calls \code{AsDateTime}
}
\examples{
AsDateTime("1-2-2017 12:34:56", us.format = FALSE)
AsDateTime(c("2018-06-19T16:45:30.045Z", "2018-06-20T06:12:34.125+06"))
}
\references{
See \url{https://en.wikipedia.org/wiki/List_of_tz_database_time_zones}
for a list of time zones.
}
\seealso{
\code{\link[lubridate]{parse_date_time2}}, \code{\link{DateTimeClasses}}
}
